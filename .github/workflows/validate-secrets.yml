name: Validate Repository Secrets

on:
  workflow_dispatch:
  schedule:
    # Run every Monday at 9 AM UTC to check secret health
    - cron: '0 9 * * 1'

jobs:
  validate-secrets:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Validate Required Secrets
        run: |
          echo "🔍 Validating required repository secrets..."
          
          # Check if secrets exist (we can't see values, but can check if they're set)
          MISSING_SECRETS=()
          
          # Core deployment secrets
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            MISSING_SECRETS+=("VERCEL_TOKEN")
          fi
          
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            MISSING_SECRETS+=("VERCEL_ORG_ID")
          fi
          
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            MISSING_SECRETS+=("VERCEL_PROJECT_ID")
          fi
          
          # Database secrets
          if [ -z "${{ secrets.DATABASE_URL }}" ]; then
            MISSING_SECRETS+=("DATABASE_URL")
          fi
          
          if [ -z "${{ secrets.DIRECT_URL }}" ]; then
            MISSING_SECRETS+=("DIRECT_URL")
          fi
          
          # Application secrets
          if [ -z "${{ secrets.NEXTAUTH_SECRET }}" ]; then
            MISSING_SECRETS+=("NEXTAUTH_SECRET")
          fi
          
          if [ -z "${{ secrets.NEXTAUTH_URL }}" ]; then
            MISSING_SECRETS+=("NEXTAUTH_URL")
          fi
          
          # API keys
          if [ -z "${{ secrets.NOWNODES_API_KEY }}" ]; then
            MISSING_SECRETS+=("NOWNODES_API_KEY")
          fi
          
          # Optional secrets (warnings only)
          OPTIONAL_MISSING=()
          
          if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            OPTIONAL_MISSING+=("SLACK_WEBHOOK_URL")
          fi
          
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            OPTIONAL_MISSING+=("AWS_ACCESS_KEY_ID")
          fi
          
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            OPTIONAL_MISSING+=("AWS_SECRET_ACCESS_KEY")
          fi
          
          if [ -z "${{ secrets.SEMGREP_APP_TOKEN }}" ]; then
            OPTIONAL_MISSING+=("SEMGREP_APP_TOKEN")
          fi
          
          # Report results
          echo "📊 Secret Validation Results:"
          echo "================================"
          
          if [ ${#MISSING_SECRETS[@]} -eq 0 ]; then
            echo "✅ All required secrets are configured!"
          else
            echo "❌ Missing required secrets:"
            for secret in "${MISSING_SECRETS[@]}"; do
              echo "  - $secret"
            done
            echo ""
            echo "Please add these secrets to:"
            echo "Repository Settings → Secrets and variables → Actions"
            echo ""
            echo "For setup instructions, see:"
            echo "docs/GITHUB_SECRETS_SETUP.md"
          fi
          
          if [ ${#OPTIONAL_MISSING[@]} -gt 0 ]; then
            echo ""
            echo "⚠️  Missing optional secrets (features may be limited):"
            for secret in "${OPTIONAL_MISSING[@]}"; do
              echo "  - $secret"
            done
          fi
          
          # Exit with error if required secrets are missing
          if [ ${#MISSING_SECRETS[@]} -gt 0 ]; then
            exit 1
          fi
          
      - name: Test API Keys (if available)
        if: success()
        run: |
          echo "🧪 Testing API connectivity..."
          
          # Test NOWNodes API key (if available)
          if [ -n "${{ secrets.NOWNODES_API_KEY }}" ]; then
            echo "Testing NOWNodes API..."
            response=$(curl -s -w "%{http_code}" -o /dev/null \
              "https://bsc.nownodes.io/balance/0x1" \
              -H "api-key: ${{ secrets.NOWNODES_API_KEY }}")
            
            if [ "$response" -eq 200 ] || [ "$response" -eq 400 ]; then
              echo "✅ NOWNodes API key is valid"
            else
              echo "⚠️  NOWNodes API key may be invalid (HTTP $response)"
            fi
          fi
          
          # Test Slack webhook (if available)
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "Testing Slack webhook..."
            response=$(curl -s -w "%{http_code}" -o /dev/null \
              -X POST "${{ secrets.SLACK_WEBHOOK_URL }}" \
              -H "Content-Type: application/json" \
              -d '{"text":"🤖 Secret validation test from GitHub Actions"}')
            
            if [ "$response" -eq 200 ]; then
              echo "✅ Slack webhook is working"
            else
              echo "⚠️  Slack webhook may be invalid (HTTP $response)"
            fi
          fi
          
      - name: Generate Secret Health Report
        if: always()
        run: |
          echo "📋 Generating secret health report..."
          
          cat > secret-health-report.md << 'EOF'
          # Secret Health Report
          
          **Generated:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          **Repository:** ${{ github.repository }}
          **Workflow:** ${{ github.workflow }}
          
          ## Required Secrets Status
          
          | Secret Name | Status |
          |-------------|---------|
          | VERCEL_TOKEN | ${{ secrets.VERCEL_TOKEN && '✅ Configured' || '❌ Missing' }} |
          | VERCEL_ORG_ID | ${{ secrets.VERCEL_ORG_ID && '✅ Configured' || '❌ Missing' }} |
          | VERCEL_PROJECT_ID | ${{ secrets.VERCEL_PROJECT_ID && '✅ Configured' || '❌ Missing' }} |
          | DATABASE_URL | ${{ secrets.DATABASE_URL && '✅ Configured' || '❌ Missing' }} |
          | DIRECT_URL | ${{ secrets.DIRECT_URL && '✅ Configured' || '❌ Missing' }} |
          | NEXTAUTH_SECRET | ${{ secrets.NEXTAUTH_SECRET && '✅ Configured' || '❌ Missing' }} |
          | NEXTAUTH_URL | ${{ secrets.NEXTAUTH_URL && '✅ Configured' || '❌ Missing' }} |
          | NOWNODES_API_KEY | ${{ secrets.NOWNODES_API_KEY && '✅ Configured' || '❌ Missing' }} |
          
          ## Optional Secrets Status
          
          | Secret Name | Status | Impact |
          |-------------|---------|---------|
          | SLACK_WEBHOOK_URL | ${{ secrets.SLACK_WEBHOOK_URL && '✅ Configured' || '⚠️ Missing' }} | No deployment notifications |
          | AWS_ACCESS_KEY_ID | ${{ secrets.AWS_ACCESS_KEY_ID && '✅ Configured' || '⚠️ Missing' }} | No email notifications |
          | AWS_SECRET_ACCESS_KEY | ${{ secrets.AWS_SECRET_ACCESS_KEY && '✅ Configured' || '⚠️ Missing' }} | No email notifications |
          | SEMGREP_APP_TOKEN | ${{ secrets.SEMGREP_APP_TOKEN && '✅ Configured' || '⚠️ Missing' }} | Limited security scanning |
          
          ## Next Steps
          
          - Review missing secrets and add them via Repository Settings
          - See [GITHUB_SECRETS_SETUP.md](docs/GITHUB_SECRETS_SETUP.md) for detailed instructions
          - Test deployment pipeline after adding missing secrets
          
          EOF
          
          echo "Secret health report generated:"
          cat secret-health-report.md
          
      - name: Upload health report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: secret-health-report
          path: secret-health-report.md
          retention-days: 30