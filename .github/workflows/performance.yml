name: Performance Monitoring

on:
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: |
          npm install -g @lhci/cli@0.12.x
          
      - name: Run Lighthouse CI
        run: |
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          LHCI_BUILD_CONTEXT__CURRENT_BRANCH: ${{ github.ref_name }}
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci
          retention-days: 7

  api-performance:
    name: API Performance Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install k6
        run: |
          sudo gpg -k
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6
          
      - name: Run API performance tests
        run: |
          k6 run tests/performance/api-load-test.js
          
      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: k6-results
          path: performance-results.json
          retention-days: 7

  database-performance:
    name: Database Performance Check
    runs-on: ubuntu-latest
    if: github.event.inputs.environment == 'staging' || github.event_name == 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Run database performance analysis
        run: |
          echo "Database performance monitoring would run here"
          # This would connect to staging DB and run performance queries
          # For production, this should be non-intrusive monitoring
          
  security-headers:
    name: Security Headers Check
    runs-on: ubuntu-latest
    steps:
      - name: Check security headers
        run: |
          URL="${{ github.event.inputs.environment == 'staging' && secrets.STAGING_URL || secrets.PRODUCTION_URL }}"
          curl -I "$URL" | grep -E "(Strict-Transport-Security|Content-Security-Policy|X-Frame-Options|X-Content-Type-Options)"
          
      - name: Run security scan
        uses: securecodewarrior/github-action-add-sarif@v1
        with:
          sarif-file: 'security-scan-results.sarif'
        continue-on-error: true